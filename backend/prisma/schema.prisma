generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               Int               @id @default(autoincrement())
  email            String            @unique
  name             String
  password         String
  role             Role
  ambulanceProfile AmbulanceProfile?
  hospitalProfile  HospitalProfile?
  trafficProfile   TrafficProfile?
}

model AmbulanceProfile {
  id          Int    @id @default(autoincrement())
  phoneNumber String @unique
  user        User   @relation(fields: [userId], references: [id])
  userId      Int    @unique
  notifications Notification[]
}

model HospitalProfile {
  id          Int     @id @default(autoincrement())
  phoneNumber String  @unique
  location    String
  status      Boolean @default(true)
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
}

model TrafficProfile {
  id          Int     @id @default(autoincrement())
  phoneNumber String  @unique
  location    String
  area        String
  status      Boolean @default(true)
  user        User    @relation(fields: [userId], references: [id])
  userId      Int     @unique
  notifications Notification[]
}

model Notification {
  id                Int      @id @default(autoincrement())
  message           String
  status            String   @default("pending") // pending, accepted, denied
  createdAt         DateTime @default(now())
  ambulanceProfile  AmbulanceProfile @relation(fields: [ambulanceProfileId], references: [id])
  ambulanceProfileId Int
  trafficProfile    TrafficProfile @relation(fields: [trafficProfileId], references: [id])
  trafficProfileId  Int
}


enum Role {
  ADMIN
  AMBULANCE
  HOSPITAL
  TRAFFIC
}

enum NotificationStatus {
  PENDING
  ACCEPTED
  DENIED
}
